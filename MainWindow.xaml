<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Proiect_1"
        xmlns:MedicalLotModel="clr-namespace:MedicalLotModel;assembly=MedicalLotModel" x:Class="Proiect_1.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="patientViewSource" d:DesignSource="{d:DesignInstance {x:Type MedicalLotModel:Patient}, CreateList=True}"/>
        <CollectionViewSource x:Key="doctorViewSource" d:DesignSource="{d:DesignInstance {x:Type MedicalLotModel:Doctor}, CreateList=True}"/>
        <CollectionViewSource x:Key="patientAppointmentsViewSource" Source="{Binding Appointments, Source={StaticResource patientViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlMedicalLot" HorizontalAlignment="Left" Height="386" VerticalAlignment="Top" Width="661" Margin="107,10,0,0">
            <TabItem Header="Patients">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource patientViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="89*"/>
                        <ColumnDefinition Width="566*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="patientDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="32,10,238,218" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.ColumnSpan="2">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="cNPColumn" Binding="{Binding CNP}" Header="CNP" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="diseaseColumn" Binding="{Binding Disease}" Header="Disease" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="patientFirstNameColumn" Binding="{Binding PatientFirstName}" Header="Patient First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="patientIdColumn" Binding="{Binding PatientId}" Header="Patient Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="patientLastNameColumn" Binding="{Binding PatientLastName}" Header="Patient Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="79,188,0,0" VerticalAlignment="Top" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100.5"/>
                            <ColumnDefinition Width="14.5"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="CNP:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="cNPTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="0" Text="{Binding CNP, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Disease:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="diseaseTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="1" Text="{Binding Disease, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Patient First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center" Grid.ColumnSpan="2"/>
                        <TextBox x:Name="patientFirstNameTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="2" Text="{Binding PatientFirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                        <Label Content="Patient Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="patientIdTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="3" Text="{Binding PatientId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Patient Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="4" VerticalAlignment="Center" Grid.ColumnSpan="2"/>
                        <TextBox x:Name="patientLastNameTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="4" Text="{Binding PatientLastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnPrev" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="31,149,0,0" Click="btnPrevious_Click" Grid.Column="1"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="330,149,0,0" Click="btnNext_Click" Grid.Column="1"/>
                </Grid>
            </TabItem>
            <TabItem Header="Doctors">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource patientViewSource}">
                    <DataGrid x:Name="doctorDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource doctorViewSource}}" Margin="23,10,151,228" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="doctorFirstNameColumn" Binding="{Binding DoctorFirstName}" Header="Doctor First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="doctorIdColumn" Binding="{Binding DoctorId}" Header="Doctor Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="doctorLastNameColumn" Binding="{Binding DoctorLastName}" Header="Doctor Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="rankColumn" Binding="{Binding Rank}" Header="Rank" Width="100"/>
                            <DataGridTextColumn x:Name="specializationColumn" Binding="{Binding Specialization}" Header="Specialization" Width="100"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" DataContext="{StaticResource doctorViewSource}" HorizontalAlignment="Left" Margin="168,176,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Doctor First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="doctorFirstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding DoctorFirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                        <Label Content="Doctor Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="doctorIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding DoctorId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Doctor Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="doctorLastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding DoctorLastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}"
Style="{StaticResource textBoxInError}"/>
                        <Label Content="Rank:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="rankTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Text="{Binding Rank, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Specialization:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="4" VerticalAlignment="Center"/>
                        <TextBox x:Name="specializationTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="4" Text="{Binding Specialization, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>

                    <Button x:Name="btnPrev1" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="122,130,0,0" Click="btnPrevious1_Click"/>
                    <Button x:Name="btnNext1" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Margin="447,130,0,0" Click="btnNext1_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Appointments">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource patientAppointmentsViewSource}">

                    <ComboBox x:Name="cmbPatients"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="56,39,0,0" SelectedValue="{Binding ElementName=appointmentsDataGrid,Path=SelectedItem.PatientId,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="PatientFirstName"/>
                                            <Binding Path="PatientLastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbDoctors"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="436,39,0,0" SelectedValue="{Binding ElementName=appointmentsDataGrid,Path=SelectedItem.DoctorId,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="DoctorFirstName"/>
                                            <Binding Path="DoctorLastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Patients" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="56,10,0,0" Width="120"/>
                    <Label Content="Doctors" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="436,10,0,0" Width="120"/>
                    <DataGrid x:Name="appointmentsDataGrid" AutoGenerateColumns="False"
EnableRowVirtualization="True" ItemsSource="{Binding}"
RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True" Margin="0,88,0,38">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="PatientFirstNameColumn" Binding="{Binding PatientFirstName}"
Header="Patient First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="PatientLastNameColumn" Binding="{Binding PatientLastName}"
Header="Patient Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="DoctorFirstNameColumn" Binding="{Binding DoctorFirstName}"
Header="Doctor First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="DoctorLastNameColumn" Binding="{Binding DoctorLastName}"
Header="Doctor Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="DiseaseColumn" Binding="{Binding Disease}"
Header="Pacient Disease" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="AppDateColumn" Binding="{Binding AppDate}"
Header="Date" Width="170"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>
        <GroupBox x:Name="gbOperations" Header="" HorizontalAlignment="Left" Height="99" VerticalAlignment="Top" Width="81" Margin="10,50,0,0" Button.Click="gbOperations_Click">
            <StackPanel x:Name="spOperations" HorizontalAlignment="Left" Height="62" Margin="0,0,-12,0" VerticalAlignment="Top" Width="81">
                <Button x:Name="btnAdd" Content="Add" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnAdd_Click"/>
                <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnEdit_Click"/>
                <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnDelete_Click"/>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="gbActions" Header="" HorizontalAlignment="Left" Height="66" VerticalAlignment="Top" Width="81" Margin="10,180,0,0">
            <StackPanel HorizontalAlignment="Left" Height="53" Margin="0,0,-12,-10" VerticalAlignment="Top" Width="81">
                <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnSave_Click"></Button>
                <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Click="btnCancel_Click"/>
            </StackPanel>

        </GroupBox>

    </Grid>
</Window>
